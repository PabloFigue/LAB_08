

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Apr 19 22:47:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216                           
   217                           	psect	strings
   218     0100                     __pstrings:
   219     0100                     stringtab:
   220     0100                     __stringtab:
   221     0100                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224     0100                     stringdir:
   225     0100  3001               	movlw	high stringdir
   226     0101  008A               	movwf	10
   227     0102  0804               	movf	4,w
   228     0103  0A84               	incf	4,f
   229     0104  0782               	addwf	2,f
   230     0105                     __stringbase:
   231     0105  3400               	retlw	0
   232     0106                     __end_of__stringtab:
   233     0106                     _dpowers:
   234     0106  3401               	retlw	1
   235     0107  3400               	retlw	0
   236     0108  340A               	retlw	10
   237     0109  3400               	retlw	0
   238     010A  3464               	retlw	100
   239     010B  3400               	retlw	0
   240     010C  34E8               	retlw	232
   241     010D  3403               	retlw	3
   242     010E  3410               	retlw	16
   243     010F  3427               	retlw	39
   244     0110                     __end_of_dpowers:
   245     0005                     _PORTA	set	5
   246     0008                     _PORTD	set	8
   247     0019                     _TXREG	set	25
   248     0006                     _PORTB	set	6
   249     001F                     _ADCON0bits	set	31
   250     001A                     _RCREG	set	26
   251     000C                     _PIR1bits	set	12
   252     001E                     _ADRESH	set	30
   253     000B                     _INTCONbits	set	11
   254     0001                     _TMR0	set	1
   255     00C4                     _CREN	set	196
   256     0064                     _TXIF	set	100
   257     00C7                     _SPEN	set	199
   258     0065                     _RCIF	set	101
   259     0066                     _ADIF	set	102
   260     005A                     _T0IF	set	90
   261     009F                     _ADCON1bits	set	159
   262     0085                     _TRISA	set	133
   263     008C                     _PIE1bits	set	140
   264     0081                     _OPTION_REGbits	set	129
   265     008F                     _OSCCONbits	set	143
   266     0088                     _TRISD	set	136
   267     0086                     _TRISB	set	134
   268     009A                     _SPBRGH	set	154
   269     0099                     _SPBRG	set	153
   270     04C5                     _TXEN	set	1221
   271     04C4                     _SYNC	set	1220
   272     04C2                     _BRGH	set	1218
   273     0188                     _ANSEL	set	392
   274     0189                     _ANSELH	set	393
   275     0C3B                     _BRG16	set	3131
   276     0110                     STR_2:
   277     0110  340D               	retlw	13
   278     0111  340A               	retlw	10
   279     0112  340A               	retlw	10
   280     0113  3445               	retlw	69	;'E'
   281     0114  3473               	retlw	115	;'s'
   282     0115  3463               	retlw	99	;'c'
   283     0116  346F               	retlw	111	;'o'
   284     0117  346A               	retlw	106	;'j'
   285     0118  3461               	retlw	97	;'a'
   286     0119  3420               	retlw	32	;' '
   287     011A  3475               	retlw	117	;'u'
   288     011B  346E               	retlw	110	;'n'
   289     011C  3461               	retlw	97	;'a'
   290     011D  3420               	retlw	32	;' '
   291     011E  3464               	retlw	100	;'d'
   292     011F  3465               	retlw	101	;'e'
   293     0120  3420               	retlw	32	;' '
   294     0121  346C               	retlw	108	;'l'
   295     0122  3461               	retlw	97	;'a'
   296     0123  3473               	retlw	115	;'s'
   297     0124  3420               	retlw	32	;' '
   298     0125  3473               	retlw	115	;'s'
   299     0126  3469               	retlw	105	;'i'
   300     0127  3467               	retlw	103	;'g'
   301     0128  3475               	retlw	117	;'u'
   302     0129  3469               	retlw	105	;'i'
   303     012A  3465               	retlw	101	;'e'
   304     012B  346E               	retlw	110	;'n'
   305     012C  3474               	retlw	116	;'t'
   306     012D  3465               	retlw	101	;'e'
   307     012E  3473               	retlw	115	;'s'
   308     012F  3420               	retlw	32	;' '
   309     0130  3466               	retlw	102	;'f'
   310     0131  3475               	retlw	117	;'u'
   311     0132  346E               	retlw	110	;'n'
   312     0133  3463               	retlw	99	;'c'
   313     0134  3469               	retlw	105	;'i'
   314     0135  346F               	retlw	111	;'o'
   315     0136  346E               	retlw	110	;'n'
   316     0137  3465               	retlw	101	;'e'
   317     0138  3473               	retlw	115	;'s'
   318     0139  343A               	retlw	58	;':'
   319     013A  340D               	retlw	13
   320     013B  340A               	retlw	10
   321     013C  3400               	retlw	0
   322     013D                     STR_5:
   323     013D  3449               	retlw	73	;'I'
   324     013E  346E               	retlw	110	;'n'
   325     013F  3467               	retlw	103	;'g'
   326     0140  3472               	retlw	114	;'r'
   327     0141  3465               	retlw	101	;'e'
   328     0142  3473               	retlw	115	;'s'
   329     0143  3465               	retlw	101	;'e'
   330     0144  3420               	retlw	32	;' '
   331     0145  3465               	retlw	101	;'e'
   332     0146  346C               	retlw	108	;'l'
   333     0147  3420               	retlw	32	;' '
   334     0148  3476               	retlw	118	;'v'
   335     0149  3461               	retlw	97	;'a'
   336     014A  346C               	retlw	108	;'l'
   337     014B  346F               	retlw	111	;'o'
   338     014C  3472               	retlw	114	;'r'
   339     014D  3420               	retlw	32	;' '
   340     014E  3464               	retlw	100	;'d'
   341     014F  3465               	retlw	101	;'e'
   342     0150  346C               	retlw	108	;'l'
   343     0151  3420               	retlw	32	;' '
   344     0152  3441               	retlw	65	;'A'
   345     0153  3453               	retlw	83	;'S'
   346     0154  3443               	retlw	67	;'C'
   347     0155  3449               	retlw	73	;'I'
   348     0156  3449               	retlw	73	;'I'
   349     0157  343A               	retlw	58	;':'
   350     0158  3420               	retlw	32	;' '
   351     0159  3420               	retlw	32	;' '
   352     015A  3400               	retlw	0
   353     015B                     STR_4:
   354     015B  3432               	retlw	50	;'2'
   355     015C  3420               	retlw	32	;' '
   356     015D  342D               	retlw	45	;'-'
   357     015E  3420               	retlw	32	;' '
   358     015F  3445               	retlw	69	;'E'
   359     0160  346E               	retlw	110	;'n'
   360     0161  3476               	retlw	118	;'v'
   361     0162  3469               	retlw	105	;'i'
   362     0163  3461               	retlw	97	;'a'
   363     0164  3472               	retlw	114	;'r'
   364     0165  3420               	retlw	32	;' '
   365     0166  3441               	retlw	65	;'A'
   366     0167  3453               	retlw	83	;'S'
   367     0168  3443               	retlw	67	;'C'
   368     0169  3449               	retlw	73	;'I'
   369     016A  3449               	retlw	73	;'I'
   370     016B  3420               	retlw	32	;' '
   371     016C  3461               	retlw	97	;'a'
   372     016D  346C               	retlw	108	;'l'
   373     016E  3420               	retlw	32	;' '
   374     016F  3450               	retlw	80	;'P'
   375     0170  344F               	retlw	79	;'O'
   376     0171  3452               	retlw	82	;'R'
   377     0172  3454               	retlw	84	;'T'
   378     0173  3442               	retlw	66	;'B'
   379     0174  340D               	retlw	13
   380     0175  340A               	retlw	10
   381     0176  3400               	retlw	0
   382     0177                     STR_3:
   383     0177  3431               	retlw	49	;'1'
   384     0178  3420               	retlw	32	;' '
   385     0179  342D               	retlw	45	;'-'
   386     017A  3420               	retlw	32	;' '
   387     017B  346C               	retlw	108	;'l'
   388     017C  3465               	retlw	101	;'e'
   389     017D  3465               	retlw	101	;'e'
   390     017E  3472               	retlw	114	;'r'
   391     017F  3420               	retlw	32	;' '
   392     0180  3450               	retlw	80	;'P'
   393     0181  346F               	retlw	111	;'o'
   394     0182  3474               	retlw	116	;'t'
   395     0183  3465               	retlw	101	;'e'
   396     0184  346E               	retlw	110	;'n'
   397     0185  3463               	retlw	99	;'c'
   398     0186  3469               	retlw	105	;'i'
   399     0187  346F               	retlw	111	;'o'
   400     0188  346D               	retlw	109	;'m'
   401     0189  3465               	retlw	101	;'e'
   402     018A  3474               	retlw	116	;'t'
   403     018B  3472               	retlw	114	;'r'
   404     018C  346F               	retlw	111	;'o'
   405     018D  340D               	retlw	13
   406     018E  340A               	retlw	10
   407     018F  3400               	retlw	0
   408     0190                     STR_6:
   409     0190  3425               	retlw	37	;'%'
   410     0191  3475               	retlw	117	;'u'
   411     0192  3400               	retlw	0
   412     013A                     
   413                           	psect	cinit
   414     000F                     start_initialization:	
   415                           ; #config settings
   416                           
   417     000F                     __initialization:
   418                           
   419                           ; Clear objects allocated to COMMON
   420     000F  01F8               	clrf	__pbssCOMMON& (0+127)
   421     0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   422                           
   423                           ; Clear objects allocated to BANK0
   424     0011  1283               	bcf	3,5	;RP0=0, select bank0
   425     0012  1303               	bcf	3,6	;RP1=0, select bank0
   426     0013  01C6               	clrf	__pbssBANK0& (0+127)
   427     0014  01C7               	clrf	(__pbssBANK0+1)& (0+127)
   428     0015  01C8               	clrf	(__pbssBANK0+2)& (0+127)
   429     0016  01C9               	clrf	(__pbssBANK0+3)& (0+127)
   430     0017                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433     0017                     __end_of__initialization:
   434     0017  0183               	clrf	3
   435     0018  120A  118A  2993   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438     0078                     __pbssCOMMON:
   439     0078                     _valPOT:
   440     0078                     	ds	2
   441                           
   442                           	psect	bssBANK0
   443     0046                     __pbssBANK0:
   444     0046                     _numero:
   445     0046                     	ds	2
   446     0048                     _status:
   447     0048                     	ds	2
   448                           
   449                           	psect	cstackCOMMON
   450     0070                     __pcstackCOMMON:
   451     0070                     ?_setup:
   452     0070                     ?_initUART:	
   453                           ; 1 bytes @ 0x0
   454                           
   455     0070                     ?_cadena:	
   456                           ; 1 bytes @ 0x0
   457                           
   458     0070                     ?_isr:	
   459                           ; 1 bytes @ 0x0
   460                           
   461     0070                     ??_isr:	
   462                           ; 1 bytes @ 0x0
   463                           
   464     0070                     ?_main:	
   465                           ; 1 bytes @ 0x0
   466                           
   467                           
   468                           ; 1 bytes @ 0x0
   469     0070                     	ds	4
   470     0074                     ??_setup:
   471     0074                     ??_initUART:	
   472                           ; 1 bytes @ 0x4
   473                           
   474     0074                     ?_strlen:	
   475                           ; 1 bytes @ 0x4
   476                           
   477     0074                     ?___lwdiv:	
   478                           ; 2 bytes @ 0x4
   479                           
   480     0074                     ___lwdiv@divisor:	
   481                           ; 2 bytes @ 0x4
   482                           
   483                           
   484                           ; 2 bytes @ 0x4
   485     0074                     	ds	2
   486     0076                     ??_strlen:
   487     0076                     ___lwdiv@dividend:	
   488                           ; 1 bytes @ 0x6
   489                           
   490                           
   491                           ; 2 bytes @ 0x6
   492     0076                     	ds	2
   493                           
   494                           	psect	cstackBANK0
   495     0020                     __pcstackBANK0:
   496     0020                     ??___lwdiv:
   497     0020                     strlen@s:	
   498                           ; 1 bytes @ 0x0
   499                           
   500                           
   501                           ; 1 bytes @ 0x0
   502     0020                     	ds	1
   503     0021                     ___lwdiv@counter:
   504     0021                     strlen@cp:	
   505                           ; 1 bytes @ 0x1
   506                           
   507                           
   508                           ; 1 bytes @ 0x1
   509     0021                     	ds	1
   510     0022                     ??_cadena:
   511     0022                     ___lwdiv@quotient:	
   512                           ; 1 bytes @ 0x2
   513                           
   514                           
   515                           ; 2 bytes @ 0x2
   516     0022                     	ds	2
   517     0024                     ?___lwmod:
   518     0024                     cadena@i:	
   519                           ; 2 bytes @ 0x4
   520                           
   521     0024                     ___lwmod@divisor:	
   522                           ; 2 bytes @ 0x4
   523                           
   524                           
   525                           ; 2 bytes @ 0x4
   526     0024                     	ds	2
   527     0026                     cadena@txt:
   528     0026                     ___lwmod@dividend:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 2 bytes @ 0x6
   533     0026                     	ds	2
   534     0028                     ??___lwmod:
   535                           
   536                           ; 1 bytes @ 0x8
   537     0028                     	ds	1
   538     0029                     ___lwmod@counter:
   539                           
   540                           ; 1 bytes @ 0x9
   541     0029                     	ds	1
   542     002A                     ?_sprintf:
   543     002A                     sprintf@f:	
   544                           ; 2 bytes @ 0xA
   545                           
   546                           
   547                           ; 1 bytes @ 0xA
   548     002A                     	ds	3
   549     002D                     ??_sprintf:
   550                           
   551                           ; 1 bytes @ 0xD
   552     002D                     	ds	3
   553     0030                     sprintf@flag:
   554                           
   555                           ; 1 bytes @ 0x10
   556     0030                     	ds	1
   557     0031                     sprintf@ap:
   558                           
   559                           ; 1 bytes @ 0x11
   560     0031                     	ds	1
   561     0032                     sprintf@val:
   562                           
   563                           ; 2 bytes @ 0x12
   564     0032                     	ds	2
   565     0034                     sprintf@prec:
   566                           
   567                           ; 1 bytes @ 0x14
   568     0034                     	ds	1
   569     0035                     sprintf@sp:
   570                           
   571                           ; 1 bytes @ 0x15
   572     0035                     	ds	1
   573     0036                     sprintf@c:
   574                           
   575                           ; 1 bytes @ 0x16
   576     0036                     	ds	1
   577     0037                     ?_enviar_numero_decimal:
   578     0037                     enviar_numero_decimal@numero:	
   579                           ; 1 bytes @ 0x17
   580                           
   581                           
   582                           ; 2 bytes @ 0x17
   583     0037                     	ds	2
   584     0039                     ??_enviar_numero_decimal:
   585                           
   586                           ; 1 bytes @ 0x19
   587     0039                     	ds	2
   588     003B                     enviar_numero_decimal@buffer:
   589                           
   590                           ; 6 bytes @ 0x1B
   591     003B                     	ds	6
   592     0041                     enviar_numero_decimal@i:
   593                           
   594                           ; 2 bytes @ 0x21
   595     0041                     	ds	2
   596     0043                     ??_main:
   597                           
   598                           ; 1 bytes @ 0x23
   599     0043                     	ds	3
   600                           
   601                           	psect	maintext
   602     0193                     __pmaintext:	
   603 ;;
   604 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   605 ;;
   606 ;; *************** function _main *****************
   607 ;; Defined at:
   608 ;;		line 77 in file "Postlab_08.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : B00/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   622 ;;      Params:         0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0
   624 ;;      Temps:          0       3       0       0       0
   625 ;;      Totals:         0       3       0       0       0
   626 ;;Total ram usage:        3 bytes
   627 ;; Hardware stack levels required when called: 4
   628 ;; This function calls:
   629 ;;		_cadena
   630 ;;		_enviar_numero_decimal
   631 ;;		_initUART
   632 ;;		_setup
   633 ;; This function is called by:
   634 ;;		Startup code after reset
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638     0193                     _main:	
   639                           ;psect for function _main
   640                           
   641     0193                     l1456:	
   642                           ;incstack = 0
   643                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   644                           
   645                           
   646                           ;Postlab_08.c: 79:     setup();
   647     0193  120A  118A  2262  120A  118A  	fcall	_setup
   648                           
   649                           ;Postlab_08.c: 80:     initUART();
   650     0198  120A  118A  238B  120A  118A  	fcall	_initUART
   651     019D                     l1458:
   652                           
   653                           ;Postlab_08.c: 82:     {;Postlab_08.c: 83:          cadena("\r\n");
   654     019D  3035               	movlw	(low (((STR_2+42)-__stringbase)| (0+32768)))& (0+255)
   655     019E  120A  118A  231C  120A  118A  	fcall	_cadena
   656     01A3                     l1460:
   657                           
   658                           ;Postlab_08.c: 84:         cadena("\r\n\nEscoja una de las siguientes funciones:\r\n");
   659     01A3  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   660     01A4  120A  118A  231C  120A  118A  	fcall	_cadena
   661     01A9                     l1462:
   662                           
   663                           ;Postlab_08.c: 85:         cadena("1 - leer Potenciometro\r\n");
   664     01A9  3072               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   665     01AA  120A  118A  231C  120A  118A  	fcall	_cadena
   666     01AF                     l1464:
   667                           
   668                           ;Postlab_08.c: 86:         cadena("2 - Enviar ASCII al PORTB\r\n");
   669     01AF  3056               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   670     01B0  120A  118A  231C  120A  118A  	fcall	_cadena
   671     01B5                     l1466:
   672                           
   673                           ;Postlab_08.c: 87:         status =1;
   674     01B5  3001               	movlw	1
   675     01B6  1283               	bcf	3,5	;RP0=0, select bank0
   676     01B7  1303               	bcf	3,6	;RP1=0, select bank0
   677     01B8  00C8               	movwf	_status
   678     01B9  3000               	movlw	0
   679     01BA  00C9               	movwf	_status+1
   680                           
   681                           ;Postlab_08.c: 88:         while (status == 1){
   682     01BB  29CC               	goto	l1476
   683     01BC                     l1468:
   684                           
   685                           ;Postlab_08.c: 89:             if (RCREG == 49){
   686     01BC  3031               	movlw	49
   687     01BD  061A               	xorwf	26,w	;volatile
   688     01BE  1D03               	btfss	3,2
   689     01BF  29C1               	goto	u821
   690     01C0  29C2               	goto	u820
   691     01C1                     u821:
   692     01C1  29C5               	goto	l1472
   693     01C2                     u820:
   694     01C2                     l1470:
   695                           
   696                           ;Postlab_08.c: 90:                 status = 0;
   697     01C2  01C8               	clrf	_status
   698     01C3  01C9               	clrf	_status+1
   699                           
   700                           ;Postlab_08.c: 91:             }
   701     01C4  29CC               	goto	l1476
   702     01C5                     l1472:
   703     01C5  3032               	movlw	50
   704     01C6  061A               	xorwf	26,w	;volatile
   705     01C7  1D03               	btfss	3,2
   706     01C8  29CA               	goto	u831
   707     01C9  29CB               	goto	u830
   708     01CA                     u831:
   709     01CA  29CC               	goto	l1476
   710     01CB                     u830:
   711     01CB  29C2               	goto	l1470
   712     01CC                     l1476:
   713                           
   714                           ;Postlab_08.c: 88:         while (status == 1){
   715     01CC  0348               	decf	_status,w
   716     01CD  0449               	iorwf	_status+1,w
   717     01CE  1903               	btfsc	3,2
   718     01CF  29D1               	goto	u841
   719     01D0  29D2               	goto	u840
   720     01D1                     u841:
   721     01D1  29BC               	goto	l1468
   722     01D2                     u840:
   723     01D2                     l1478:
   724                           
   725                           ;Postlab_08.c: 96:             if (RCREG == 49){
   726     01D2  3031               	movlw	49
   727     01D3  061A               	xorwf	26,w	;volatile
   728     01D4  1D03               	btfss	3,2
   729     01D5  29D7               	goto	u851
   730     01D6  29D8               	goto	u850
   731     01D7                     u851:
   732     01D7  29EF               	goto	l1488
   733     01D8                     u850:
   734     01D8                     l1480:
   735                           
   736                           ;Postlab_08.c: 97:                 ADCON0bits.GO = 1;
   737     01D8  149F               	bsf	31,1	;volatile
   738     01D9                     l102:	
   739                           ;Postlab_08.c: 98:                 while (ADIF == 0){;}
   740                           
   741     01D9  1F0C               	btfss	12,6	;volatile
   742     01DA  29DC               	goto	u861
   743     01DB  29DD               	goto	u860
   744     01DC                     u861:
   745     01DC  29D9               	goto	l102
   746     01DD                     u860:
   747     01DD                     l104:
   748                           
   749                           ;Postlab_08.c: 99:                 _delay((unsigned long)((2)*(8000000/4000000.0)));
   750     01DD  29DE               	nop2	;2 cycle nop
   751     01DE  29DF               	nop2	;2 cycle nop
   752     01DF                     l1482:
   753                           
   754                           ;Postlab_08.c: 100:                 enviar_numero_decimal(numero);
   755     01DF  1283               	bcf	3,5	;RP0=0, select bank0
   756     01E0  1303               	bcf	3,6	;RP1=0, select bank0
   757     01E1  0847               	movf	_numero+1,w
   758     01E2  00B8               	movwf	enviar_numero_decimal@numero+1
   759     01E3  0846               	movf	_numero,w
   760     01E4  00B7               	movwf	enviar_numero_decimal@numero
   761     01E5  120A  118A  22E1  120A  118A  	fcall	_enviar_numero_decimal
   762     01EA                     l1484:
   763                           
   764                           ;Postlab_08.c: 101:                 RCIF = 0;
   765     01EA  1283               	bcf	3,5	;RP0=0, select bank0
   766     01EB  1303               	bcf	3,6	;RP1=0, select bank0
   767     01EC  128C               	bcf	12,5	;volatile
   768     01ED                     l1486:
   769                           
   770                           ;Postlab_08.c: 102:                 RCREG =0;
   771     01ED  019A               	clrf	26	;volatile
   772                           
   773                           ;Postlab_08.c: 103:             }
   774     01EE  2A09               	goto	l1502
   775     01EF                     l1488:
   776     01EF  3032               	movlw	50
   777     01F0  061A               	xorwf	26,w	;volatile
   778     01F1  1D03               	btfss	3,2
   779     01F2  29F4               	goto	u871
   780     01F3  29F5               	goto	u870
   781     01F4                     u871:
   782     01F4  2A09               	goto	l1502
   783     01F5                     u870:
   784     01F5                     l1490:
   785                           
   786                           ;Postlab_08.c: 105:                 PORTB = 0;
   787     01F5  0186               	clrf	6	;volatile
   788     01F6                     l1492:
   789                           
   790                           ;Postlab_08.c: 106:                 RCIF = 0;
   791     01F6  128C               	bcf	12,5	;volatile
   792     01F7                     l1494:
   793                           
   794                           ;Postlab_08.c: 107:                 cadena("Ingrese el valor del ASCII:  ");
   795     01F7  3038               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   796     01F8  120A  118A  231C  120A  118A  	fcall	_cadena
   797     01FD                     l107:	
   798                           ;Postlab_08.c: 108:                 while (RCIF == 0){;}
   799                           
   800     01FD  1283               	bcf	3,5	;RP0=0, select bank0
   801     01FE  1303               	bcf	3,6	;RP1=0, select bank0
   802     01FF  1E8C               	btfss	12,5	;volatile
   803     0200  2A02               	goto	u881
   804     0201  2A03               	goto	u880
   805     0202                     u881:
   806     0202  29FD               	goto	l107
   807     0203                     u880:
   808     0203                     l1496:
   809                           
   810                           ;Postlab_08.c: 109:                 TXREG = RCREG;
   811     0203  081A               	movf	26,w	;volatile
   812     0204  0099               	movwf	25	;volatile
   813                           
   814                           ;Postlab_08.c: 110:                 PORTB = RCREG;
   815     0205  081A               	movf	26,w	;volatile
   816     0206  0086               	movwf	6	;volatile
   817     0207                     l1498:
   818                           
   819                           ;Postlab_08.c: 111:                 RCREG =0;
   820     0207  019A               	clrf	26	;volatile
   821     0208                     l1500:
   822                           
   823                           ;Postlab_08.c: 112:                 RCIF = 0;
   824     0208  128C               	bcf	12,5	;volatile
   825     0209                     l1502:
   826                           
   827                           ;Postlab_08.c: 114:             _delay((unsigned long)((100)*(8000000/4000.0)));
   828     0209  3002               	movlw	2
   829     020A  1283               	bcf	3,5	;RP0=0, select bank0
   830     020B  1303               	bcf	3,6	;RP1=0, select bank0
   831     020C  00C5               	movwf	??_main+2
   832     020D  3004               	movlw	4
   833     020E  00C4               	movwf	??_main+1
   834     020F  30B9               	movlw	185
   835     0210  00C3               	movwf	??_main
   836     0211                     u897:
   837     0211  0BC3               	decfsz	??_main,f
   838     0212  2A11               	goto	u897
   839     0213  0BC4               	decfsz	??_main+1,f
   840     0214  2A11               	goto	u897
   841     0215  0BC5               	decfsz	??_main+2,f
   842     0216  2A11               	goto	u897
   843     0217  2A18               	nop2
   844     0218  299D               	goto	l1458
   845     0219  120A  118A  280C   	ljmp	start
   846     021C                     __end_of_main:
   847                           
   848                           	psect	text1
   849     0262                     __ptext1:	
   850 ;; *************** function _setup *****************
   851 ;; Defined at:
   852 ;;		line 193 in file "Postlab_08.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   866 ;;      Params:         0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0
   868 ;;      Temps:          2       0       0       0       0
   869 ;;      Totals:         2       0       0       0       0
   870 ;;Total ram usage:        2 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880     0262                     _setup:	
   881                           ;psect for function _setup
   882                           
   883     0262                     l1146:	
   884                           ;incstack = 0
   885                           ; Regs used in _setup: [wreg+status,2+status,0]
   886                           
   887                           
   888                           ;Postlab_08.c: 196:     ANSELH = 0;
   889     0262  1683               	bsf	3,5	;RP0=1, select bank3
   890     0263  1703               	bsf	3,6	;RP1=1, select bank3
   891     0264  0189               	clrf	9	;volatile
   892                           
   893                           ;Postlab_08.c: 198:     TRISB = 0;
   894     0265  1683               	bsf	3,5	;RP0=1, select bank1
   895     0266  1303               	bcf	3,6	;RP1=0, select bank1
   896     0267  0186               	clrf	6	;volatile
   897                           
   898                           ;Postlab_08.c: 199:     TRISD = 0;
   899     0268  0188               	clrf	8	;volatile
   900                           
   901                           ;Postlab_08.c: 201:     PORTB = 0;
   902     0269  1283               	bcf	3,5	;RP0=0, select bank0
   903     026A  1303               	bcf	3,6	;RP1=0, select bank0
   904     026B  0186               	clrf	6	;volatile
   905                           
   906                           ;Postlab_08.c: 202:     PORTD = 0;
   907     026C  0188               	clrf	8	;volatile
   908                           
   909                           ;Postlab_08.c: 203:     PORTA = 0;
   910     026D  0185               	clrf	5	;volatile
   911     026E                     l1148:
   912                           
   913                           ;Postlab_08.c: 205:     OSCCONbits.IRCF = 0b111;
   914     026E  3070               	movlw	112
   915     026F  1683               	bsf	3,5	;RP0=1, select bank1
   916     0270  1303               	bcf	3,6	;RP1=0, select bank1
   917     0271  048F               	iorwf	15,f	;volatile
   918     0272                     l1150:
   919                           
   920                           ;Postlab_08.c: 206:     OSCCONbits.SCS = 1;
   921     0272  140F               	bsf	15,0	;volatile
   922     0273                     l1152:
   923                           
   924                           ;Postlab_08.c: 209:     OPTION_REGbits.T0CS = 0;
   925     0273  1281               	bcf	1,5	;volatile
   926     0274                     l1154:
   927                           
   928                           ;Postlab_08.c: 210:     OPTION_REGbits.PSA = 0;
   929     0274  1181               	bcf	1,3	;volatile
   930     0275                     l1156:
   931                           
   932                           ;Postlab_08.c: 211:     OPTION_REGbits.PS = 0b111;
   933     0275  3007               	movlw	7
   934     0276  0481               	iorwf	1,f	;volatile
   935     0277                     l1158:
   936                           
   937                           ;Postlab_08.c: 212:     TMR0 = 61;
   938     0277  303D               	movlw	61
   939     0278  1283               	bcf	3,5	;RP0=0, select bank0
   940     0279  1303               	bcf	3,6	;RP1=0, select bank0
   941     027A  0081               	movwf	1	;volatile
   942     027B                     l1160:
   943                           
   944                           ;Postlab_08.c: 215:     INTCONbits.T0IF = 0;
   945     027B  110B               	bcf	11,2	;volatile
   946     027C                     l1162:
   947                           
   948                           ;Postlab_08.c: 216:     INTCONbits.T0IE = 1;
   949     027C  168B               	bsf	11,5	;volatile
   950     027D                     l1164:
   951                           
   952                           ;Postlab_08.c: 217:     PIR1bits.ADIF = 0;
   953     027D  130C               	bcf	12,6	;volatile
   954     027E                     l1166:
   955                           
   956                           ;Postlab_08.c: 218:     PIE1bits.ADIE = 1;
   957     027E  1683               	bsf	3,5	;RP0=1, select bank1
   958     027F  1303               	bcf	3,6	;RP1=0, select bank1
   959     0280  170C               	bsf	12,6	;volatile
   960     0281                     l1168:
   961                           
   962                           ;Postlab_08.c: 219:     INTCONbits.GIE = 1;
   963     0281  178B               	bsf	11,7	;volatile
   964     0282                     l1170:
   965                           
   966                           ;Postlab_08.c: 223:     ANSEL = 0b00000001;
   967     0282  3001               	movlw	1
   968     0283  1683               	bsf	3,5	;RP0=1, select bank3
   969     0284  1703               	bsf	3,6	;RP1=1, select bank3
   970     0285  0088               	movwf	8	;volatile
   971     0286                     l1172:
   972                           
   973                           ;Postlab_08.c: 224:     TRISA = 0b00000001;
   974     0286  3001               	movlw	1
   975     0287  1683               	bsf	3,5	;RP0=1, select bank1
   976     0288  1303               	bcf	3,6	;RP1=0, select bank1
   977     0289  0085               	movwf	5	;volatile
   978     028A                     l1174:
   979                           
   980                           ;Postlab_08.c: 225:     ADCON0bits.ADCS = 0b10;
   981     028A  1283               	bcf	3,5	;RP0=0, select bank0
   982     028B  1303               	bcf	3,6	;RP1=0, select bank0
   983     028C  081F               	movf	31,w	;volatile
   984     028D  393F               	andlw	-193
   985     028E  3880               	iorlw	128
   986     028F  009F               	movwf	31	;volatile
   987     0290                     l1176:
   988                           
   989                           ;Postlab_08.c: 226:     ADCON0bits.CHS = 0b0000;
   990     0290  30C3               	movlw	-61
   991     0291  059F               	andwf	31,f	;volatile
   992     0292                     l1178:
   993                           
   994                           ;Postlab_08.c: 227:     _delay((unsigned long)((2)*(8000000/4000.0)));
   995     0292  3006               	movlw	6
   996     0293  00F5               	movwf	??_setup+1
   997     0294  3030               	movlw	48
   998     0295  00F4               	movwf	??_setup
   999     0296                     u907:
  1000     0296  0BF4               	decfsz	??_setup,f
  1001     0297  2A96               	goto	u907
  1002     0298  0BF5               	decfsz	??_setup+1,f
  1003     0299  2A96               	goto	u907
  1004     029A  0000               	nop
  1005     029B                     l1180:
  1006                           
  1007                           ;Postlab_08.c: 228:     ADCON1bits.ADFM = 0;
  1008     029B  1683               	bsf	3,5	;RP0=1, select bank1
  1009     029C  1303               	bcf	3,6	;RP1=0, select bank1
  1010     029D  139F               	bcf	31,7	;volatile
  1011     029E                     l1182:
  1012                           
  1013                           ;Postlab_08.c: 229:     ADCON1bits.VCFG0 = 0;
  1014     029E  121F               	bcf	31,4	;volatile
  1015     029F                     l1184:
  1016                           
  1017                           ;Postlab_08.c: 230:     ADCON1bits.VCFG1 = 0;
  1018     029F  129F               	bcf	31,5	;volatile
  1019     02A0                     l1186:
  1020                           
  1021                           ;Postlab_08.c: 231:     ADCON0bits.ADON = 1;
  1022     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1023     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1024     02A2  141F               	bsf	31,0	;volatile
  1025     02A3                     l1188:
  1026                           
  1027                           ;Postlab_08.c: 232:     ADIF = 0;
  1028     02A3  130C               	bcf	12,6	;volatile
  1029     02A4                     l129:
  1030     02A4  0008               	return
  1031     02A5                     __end_of_setup:
  1032                           
  1033                           	psect	text2
  1034     038B                     __ptext2:	
  1035 ;; *************** function _initUART *****************
  1036 ;; Defined at:
  1037 ;;		line 138 in file "Postlab_08.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, status,2
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         0       0       0       0       0
  1055 ;;Total ram usage:        0 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     038B                     _initUART:	
  1066                           ;psect for function _initUART
  1067                           
  1068     038B                     l1192:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _initUART: [wreg+status,2]
  1071                           
  1072                           
  1073                           ;Postlab_08.c: 164:     SPBRG = 12;
  1074     038B  300C               	movlw	12
  1075     038C  1683               	bsf	3,5	;RP0=1, select bank1
  1076     038D  1303               	bcf	3,6	;RP1=0, select bank1
  1077     038E  0099               	movwf	25	;volatile
  1078     038F                     l1194:
  1079                           
  1080                           ;Postlab_08.c: 165:     SPBRGH = 0;
  1081     038F  019A               	clrf	26	;volatile
  1082     0390                     l1196:
  1083                           
  1084                           ;Postlab_08.c: 166:     BRGH = 0;
  1085     0390  1118               	bcf	24,2	;volatile
  1086     0391                     l1198:
  1087                           
  1088                           ;Postlab_08.c: 167:     BRG16 = 0;
  1089     0391  1683               	bsf	3,5	;RP0=1, select bank3
  1090     0392  1703               	bsf	3,6	;RP1=1, select bank3
  1091     0393  1187               	bcf	7,3	;volatile
  1092     0394                     l1200:
  1093                           
  1094                           ;Postlab_08.c: 170:     SYNC = 0;
  1095     0394  1683               	bsf	3,5	;RP0=1, select bank1
  1096     0395  1303               	bcf	3,6	;RP1=0, select bank1
  1097     0396  1218               	bcf	24,4	;volatile
  1098     0397                     l1202:
  1099                           
  1100                           ;Postlab_08.c: 171:     SPEN = 1;
  1101     0397  1283               	bcf	3,5	;RP0=0, select bank0
  1102     0398  1303               	bcf	3,6	;RP1=0, select bank0
  1103     0399  1798               	bsf	24,7	;volatile
  1104     039A                     l1204:
  1105                           
  1106                           ;Postlab_08.c: 177:     TXEN = 1;
  1107     039A  1683               	bsf	3,5	;RP0=1, select bank1
  1108     039B  1303               	bcf	3,6	;RP1=0, select bank1
  1109     039C  1698               	bsf	24,5	;volatile
  1110     039D                     l1206:
  1111                           
  1112                           ;Postlab_08.c: 178:     TXIF = 0;
  1113     039D  1283               	bcf	3,5	;RP0=0, select bank0
  1114     039E  1303               	bcf	3,6	;RP1=0, select bank0
  1115     039F  120C               	bcf	12,4	;volatile
  1116     03A0                     l1208:
  1117                           
  1118                           ;Postlab_08.c: 180:     CREN = 1;
  1119     03A0  1618               	bsf	24,4	;volatile
  1120     03A1                     l1210:
  1121                           
  1122                           ;Postlab_08.c: 181:     RCIF = 0;
  1123     03A1  128C               	bcf	12,5	;volatile
  1124     03A2                     l126:
  1125     03A2  0008               	return
  1126     03A3                     __end_of_initUART:
  1127                           
  1128                           	psect	text3
  1129     02E1                     __ptext3:	
  1130 ;; *************** function _enviar_numero_decimal *****************
  1131 ;; Defined at:
  1132 ;;		line 120 in file "Postlab_08.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;  numero          2   23[BANK0 ] unsigned int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  i               2   33[BANK0 ] int 
  1137 ;;  buffer          6   27[BANK0 ] unsigned char [6]
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       2       0       0       0
  1148 ;;      Locals:         0       8       0       0       0
  1149 ;;      Temps:          0       2       0       0       0
  1150 ;;      Totals:         0      12       0       0       0
  1151 ;;Total ram usage:       12 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 3
  1154 ;; This function calls:
  1155 ;;		_sprintf
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     02E1                     _enviar_numero_decimal:	
  1162                           ;psect for function _enviar_numero_decimal
  1163                           
  1164     02E1                     l1440:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _enviar_numero_decimal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+csta
      +                          ck]
  1167                           
  1168                           
  1169                           ;Postlab_08.c: 121:     char buffer[6];;Postlab_08.c: 122:     sprintf(buffer, "%u", num
      +                          ero);
  1170     02E1  308B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1171     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1172     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1173     02E4  00AA               	movwf	sprintf@f
  1174     02E5  0838               	movf	enviar_numero_decimal@numero+1,w
  1175     02E6  00AC               	movwf	?_sprintf+2
  1176     02E7  0837               	movf	enviar_numero_decimal@numero,w
  1177     02E8  00AB               	movwf	?_sprintf+1
  1178     02E9  303B               	movlw	(low (enviar_numero_decimal@buffer| 0))& (0+255)
  1179     02EA  120A  118A  201B  120A  118A  	fcall	_sprintf
  1180     02EF                     l1442:
  1181                           
  1182                           ;Postlab_08.c: 123:     for (int i = 0; i < 6; i++) {
  1183     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1184     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1185     02F1  01C1               	clrf	enviar_numero_decimal@i
  1186     02F2  01C2               	clrf	enviar_numero_decimal@i+1
  1187     02F3                     l1448:
  1188                           
  1189                           ;Postlab_08.c: 124:         TXREG = buffer[i];
  1190     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1191     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1192     02F5  0841               	movf	enviar_numero_decimal@i,w
  1193     02F6  3E3B               	addlw	(low (enviar_numero_decimal@buffer| 0))& (0+255)
  1194     02F7  0084               	movwf	4
  1195     02F8  1383               	bcf	3,7	;select IRP bank0
  1196     02F9  0800               	movf	0,w
  1197     02FA  0099               	movwf	25	;volatile
  1198     02FB                     l1450:
  1199                           
  1200                           ;Postlab_08.c: 125:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1201     02FB  300B               	movlw	11
  1202     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1203     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1204     02FE  00BA               	movwf	??_enviar_numero_decimal+1
  1205     02FF  3061               	movlw	97
  1206     0300  00B9               	movwf	??_enviar_numero_decimal
  1207     0301                     u917:
  1208     0301  0BB9               	decfsz	??_enviar_numero_decimal,f
  1209     0302  2B01               	goto	u917
  1210     0303  0BBA               	decfsz	??_enviar_numero_decimal+1,f
  1211     0304  2B01               	goto	u917
  1212     0305  2B06               	nop2
  1213     0306                     l1452:
  1214                           
  1215                           ;Postlab_08.c: 126:     }
  1216     0306  3001               	movlw	1
  1217     0307  1283               	bcf	3,5	;RP0=0, select bank0
  1218     0308  1303               	bcf	3,6	;RP1=0, select bank0
  1219     0309  07C1               	addwf	enviar_numero_decimal@i,f
  1220     030A  1803               	skipnc
  1221     030B  0AC2               	incf	enviar_numero_decimal@i+1,f
  1222     030C  3000               	movlw	0
  1223     030D  07C2               	addwf	enviar_numero_decimal@i+1,f
  1224     030E                     l1454:
  1225     030E  0842               	movf	enviar_numero_decimal@i+1,w
  1226     030F  3A80               	xorlw	128
  1227     0310  00FF               	movwf	btemp+1
  1228     0311  3080               	movlw	128
  1229     0312  027F               	subwf	btemp+1,w
  1230     0313  1D03               	skipz
  1231     0314  2B17               	goto	u815
  1232     0315  3006               	movlw	6
  1233     0316  0241               	subwf	enviar_numero_decimal@i,w
  1234     0317                     u815:
  1235     0317  1C03               	skipc
  1236     0318  2B1A               	goto	u811
  1237     0319  2B1B               	goto	u810
  1238     031A                     u811:
  1239     031A  2AF3               	goto	l1448
  1240     031B                     u810:
  1241     031B                     l117:
  1242     031B  0008               	return
  1243     031C                     __end_of_enviar_numero_decimal:
  1244                           
  1245                           	psect	text4
  1246     001B                     __ptext4:	
  1247 ;; *************** function _sprintf *****************
  1248 ;; Defined at:
  1249 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  sp              1    wreg     PTR unsigned char 
  1252 ;;		 -> enviar_numero_decimal@buffer(6), 
  1253 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1254 ;;		 -> STR_6(3), 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1257 ;;		 -> enviar_numero_decimal@buffer(6), 
  1258 ;;  tmpval          4    0        struct .
  1259 ;;  val             2   18[BANK0 ] unsigned int 
  1260 ;;  cp              2    0        PTR const unsigned char 
  1261 ;;  len             2    0        unsigned int 
  1262 ;;  c               1   22[BANK0 ] unsigned char 
  1263 ;;  prec            1   20[BANK0 ] char 
  1264 ;;  ap              1   17[BANK0 ] PTR void [1]
  1265 ;;		 -> ?_sprintf(2), 
  1266 ;;  flag            1   16[BANK0 ] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2   10[BANK0 ] int 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       3       0       0       0
  1277 ;;      Locals:         0       7       0       0       0
  1278 ;;      Temps:          0       3       0       0       0
  1279 ;;      Totals:         0      13       0       0       0
  1280 ;;Total ram usage:       13 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 2
  1283 ;; This function calls:
  1284 ;;		___lwdiv
  1285 ;;		___lwmod
  1286 ;; This function is called by:
  1287 ;;		_enviar_numero_decimal
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291     001B                     _sprintf:	
  1292                           ;psect for function _sprintf
  1293                           
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1297                           ;sprintf@sp stored from wreg
  1298     001B  1283               	bcf	3,5	;RP0=0, select bank0
  1299     001C  1303               	bcf	3,6	;RP1=0, select bank0
  1300     001D  00B5               	movwf	sprintf@sp
  1301     001E                     l1368:
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1304     001E  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1305     001F  00B1               	movwf	sprintf@ap
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1308     0020  28C9               	goto	l1410
  1309     0021                     l1370:
  1310                           
  1311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1312     0021  3025               	movlw	37
  1313     0022  0636               	xorwf	sprintf@c,w
  1314     0023  1903               	btfsc	3,2
  1315     0024  2826               	goto	u741
  1316     0025  2827               	goto	u740
  1317     0026                     u741:
  1318     0026  2831               	goto	l1376
  1319     0027                     u740:
  1320     0027                     l1372:
  1321                           
  1322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1323     0027  0835               	movf	sprintf@sp,w
  1324     0028  0084               	movwf	4
  1325     0029  0836               	movf	sprintf@c,w
  1326     002A  1383               	bcf	3,7	;select IRP bank0
  1327     002B  0080               	movwf	0
  1328     002C                     l1374:
  1329     002C  3001               	movlw	1
  1330     002D  00AD               	movwf	??_sprintf
  1331     002E  082D               	movf	??_sprintf,w
  1332     002F  07B5               	addwf	sprintf@sp,f
  1333                           
  1334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1335     0030  28C9               	goto	l1410
  1336     0031                     l1376:
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1339     0031  01B0               	clrf	sprintf@flag
  1340                           
  1341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1342     0032  2838               	goto	l1382
  1343     0033                     l1378:
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1346     0033  30C0               	movlw	192
  1347     0034  00AD               	movwf	??_sprintf
  1348     0035  082D               	movf	??_sprintf,w
  1349     0036  04B0               	iorwf	sprintf@flag,f
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1352     0037  2852               	goto	l1384
  1353     0038                     l1382:
  1354     0038  3001               	movlw	1
  1355     0039  07AA               	addwf	sprintf@f,f
  1356     003A  30FF               	movlw	-1
  1357     003B  072A               	addwf	sprintf@f,w
  1358     003C  0084               	movwf	4
  1359     003D  120A  118A  2100  120A  118A  	fcall	stringdir
  1360     0042  00B6               	movwf	sprintf@c
  1361     0043  00AD               	movwf	??_sprintf
  1362     0044  01AE               	clrf	??_sprintf+1
  1363                           
  1364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1365                           ; Switch size 1, requested type "simple"
  1366                           ; Number of cases is 1, Range of values is 0 to 0
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            4     3 (average)
  1370                           ; direct_byte           11     8 (fixed)
  1371                           ; jumptable            260     6 (fixed)
  1372                           ;	Chosen strategy is simple_byte
  1373     0045  082E               	movf	??_sprintf+1,w
  1374     0046  3A00               	xorlw	0	; case 0
  1375     0047  1903               	skipnz
  1376     0048  284A               	goto	l1524
  1377     0049  28C9               	goto	l1410
  1378     004A                     l1524:
  1379                           
  1380                           ; Switch size 1, requested type "simple"
  1381                           ; Number of cases is 2, Range of values is 0 to 117
  1382                           ; switch strategies available:
  1383                           ; Name         Instructions Cycles
  1384                           ; simple_byte            7     4 (average)
  1385                           ; jumptable            260     6 (fixed)
  1386                           ;	Chosen strategy is simple_byte
  1387     004A  082D               	movf	??_sprintf,w
  1388     004B  3A00               	xorlw	0	; case 0
  1389     004C  1903               	skipnz
  1390     004D  28D9               	goto	l1412
  1391     004E  3A75               	xorlw	117	; case 117
  1392     004F  1903               	skipnz
  1393     0050  2833               	goto	l1378
  1394     0051  28C9               	goto	l1410
  1395     0052                     l1384:
  1396                           
  1397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1398     0052  0831               	movf	sprintf@ap,w
  1399     0053  0084               	movwf	4
  1400     0054  1383               	bcf	3,7	;select IRP bank0
  1401     0055  0800               	movf	0,w
  1402     0056  00B2               	movwf	sprintf@val
  1403     0057  0A84               	incf	4,f
  1404     0058  0800               	movf	0,w
  1405     0059  00B3               	movwf	sprintf@val+1
  1406     005A                     l1386:
  1407     005A  3002               	movlw	2
  1408     005B  00AD               	movwf	??_sprintf
  1409     005C  082D               	movf	??_sprintf,w
  1410     005D  07B1               	addwf	sprintf@ap,f
  1411     005E                     l1388:
  1412                           
  1413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1414     005E  01B6               	clrf	sprintf@c
  1415     005F  0AB6               	incf	sprintf@c,f
  1416     0060                     l1394:
  1417                           
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1419     0060  0836               	movf	sprintf@c,w
  1420     0061  00AD               	movwf	??_sprintf
  1421     0062  072D               	addwf	??_sprintf,w
  1422     0063  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1423     0064  0084               	movwf	4
  1424     0065  120A  118A  2100  120A  118A  	fcall	stringdir
  1425     006A  00AE               	movwf	??_sprintf+1
  1426     006B  120A  118A  2100  120A  118A  	fcall	stringdir
  1427     0070  00AF               	movwf	??_sprintf+2
  1428     0071  082F               	movf	??_sprintf+2,w
  1429     0072  0233               	subwf	sprintf@val+1,w
  1430     0073  1D03               	skipz
  1431     0074  2877               	goto	u755
  1432     0075  082E               	movf	??_sprintf+1,w
  1433     0076  0232               	subwf	sprintf@val,w
  1434     0077                     u755:
  1435     0077  1803               	skipnc
  1436     0078  287A               	goto	u751
  1437     0079  287B               	goto	u750
  1438     007A                     u751:
  1439     007A  287C               	goto	l1398
  1440     007B                     u750:
  1441     007B  2886               	goto	l1400
  1442     007C                     l1398:
  1443     007C  3001               	movlw	1
  1444     007D  00AD               	movwf	??_sprintf
  1445     007E  082D               	movf	??_sprintf,w
  1446     007F  07B6               	addwf	sprintf@c,f
  1447     0080  3005               	movlw	5
  1448     0081  0636               	xorwf	sprintf@c,w
  1449     0082  1D03               	btfss	3,2
  1450     0083  2885               	goto	u761
  1451     0084  2886               	goto	u760
  1452     0085                     u761:
  1453     0085  2860               	goto	l1394
  1454     0086                     u760:
  1455     0086                     l1400:
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1458     0086  0836               	movf	sprintf@c,w
  1459     0087  00B4               	movwf	sprintf@prec
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1462     0088  28C0               	goto	l1408
  1463     0089                     l1402:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1466     0089  300A               	movlw	10
  1467     008A  00A4               	movwf	___lwmod@divisor
  1468     008B  3000               	movlw	0
  1469     008C  00A5               	movwf	___lwmod@divisor+1
  1470     008D  0834               	movf	sprintf@prec,w
  1471     008E  00AD               	movwf	??_sprintf
  1472     008F  072D               	addwf	??_sprintf,w
  1473     0090  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1474     0091  0084               	movwf	4
  1475     0092  120A  118A  2100  120A  118A  	fcall	stringdir
  1476     0097  00F4               	movwf	___lwdiv@divisor
  1477     0098  120A  118A  2100  120A  118A  	fcall	stringdir
  1478     009D  00F5               	movwf	___lwdiv@divisor+1
  1479     009E  0833               	movf	sprintf@val+1,w
  1480     009F  00F7               	movwf	___lwdiv@dividend+1
  1481     00A0  0832               	movf	sprintf@val,w
  1482     00A1  00F6               	movwf	___lwdiv@dividend
  1483     00A2  120A  118A  221C  120A  118A  	fcall	___lwdiv
  1484     00A7  0875               	movf	?___lwdiv+1,w
  1485     00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1486     00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1487     00AA  00A7               	movwf	___lwmod@dividend+1
  1488     00AB  0874               	movf	?___lwdiv,w
  1489     00AC  00A6               	movwf	___lwmod@dividend
  1490     00AD  120A  118A  22A5  120A  118A  	fcall	___lwmod
  1491     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1492     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1493     00B4  0824               	movf	?___lwmod,w
  1494     00B5  3E30               	addlw	48
  1495     00B6  00B6               	movwf	sprintf@c
  1496     00B7                     l1404:
  1497                           
  1498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1499     00B7  0835               	movf	sprintf@sp,w
  1500     00B8  0084               	movwf	4
  1501     00B9  0836               	movf	sprintf@c,w
  1502     00BA  1383               	bcf	3,7	;select IRP bank0
  1503     00BB  0080               	movwf	0
  1504     00BC                     l1406:
  1505     00BC  3001               	movlw	1
  1506     00BD  00AD               	movwf	??_sprintf
  1507     00BE  082D               	movf	??_sprintf,w
  1508     00BF  07B5               	addwf	sprintf@sp,f
  1509     00C0                     l1408:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1512     00C0  30FF               	movlw	255
  1513     00C1  00AD               	movwf	??_sprintf
  1514     00C2  082D               	movf	??_sprintf,w
  1515     00C3  07B4               	addwf	sprintf@prec,f
  1516     00C4  0A34               	incf	sprintf@prec,w
  1517     00C5  1D03               	btfss	3,2
  1518     00C6  28C8               	goto	u771
  1519     00C7  28C9               	goto	u770
  1520     00C8                     u771:
  1521     00C8  2889               	goto	l1402
  1522     00C9                     u770:
  1523     00C9                     l1410:
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1526     00C9  3001               	movlw	1
  1527     00CA  07AA               	addwf	sprintf@f,f
  1528     00CB  30FF               	movlw	-1
  1529     00CC  072A               	addwf	sprintf@f,w
  1530     00CD  0084               	movwf	4
  1531     00CE  120A  118A  2100  120A  118A  	fcall	stringdir
  1532     00D3  00B6               	movwf	sprintf@c
  1533     00D4  0836               	movf	sprintf@c,w
  1534     00D5  1D03               	btfss	3,2
  1535     00D6  28D8               	goto	u781
  1536     00D7  28D9               	goto	u780
  1537     00D8                     u781:
  1538     00D8  2821               	goto	l1370
  1539     00D9                     u780:
  1540     00D9                     l1412:
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1543     00D9  0835               	movf	sprintf@sp,w
  1544     00DA  0084               	movwf	4
  1545     00DB  1383               	bcf	3,7	;select IRP bank0
  1546     00DC  0180               	clrf	0
  1547     00DD                     l236:
  1548     00DD  0008               	return
  1549     00DE                     __end_of_sprintf:
  1550                           
  1551                           	psect	text5
  1552     02A5                     __ptext5:	
  1553 ;; *************** function ___lwmod *****************
  1554 ;; Defined at:
  1555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  divisor         2    4[BANK0 ] unsigned int 
  1558 ;;  dividend        2    6[BANK0 ] unsigned int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  counter         1    9[BANK0 ] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  2    4[BANK0 ] unsigned int 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       4       0       0       0
  1571 ;;      Locals:         0       1       0       0       0
  1572 ;;      Temps:          0       1       0       0       0
  1573 ;;      Totals:         0       6       0       0       0
  1574 ;;Total ram usage:        6 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_sprintf
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584     02A5                     ___lwmod:	
  1585                           ;psect for function ___lwmod
  1586                           
  1587     02A5                     l1346:	
  1588                           ;incstack = 0
  1589                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1590                           
  1591     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1592     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1593     02A7  0824               	movf	___lwmod@divisor,w
  1594     02A8  0425               	iorwf	___lwmod@divisor+1,w
  1595     02A9  1903               	btfsc	3,2
  1596     02AA  2AAC               	goto	u681
  1597     02AB  2AAD               	goto	u680
  1598     02AC                     u681:
  1599     02AC  2ADC               	goto	l1364
  1600     02AD                     u680:
  1601     02AD                     l1348:
  1602     02AD  01A9               	clrf	___lwmod@counter
  1603     02AE  0AA9               	incf	___lwmod@counter,f
  1604     02AF  2ABB               	goto	l1354
  1605     02B0                     l1350:
  1606     02B0  3001               	movlw	1
  1607     02B1                     u695:
  1608     02B1  1003               	clrc
  1609     02B2  0DA4               	rlf	___lwmod@divisor,f
  1610     02B3  0DA5               	rlf	___lwmod@divisor+1,f
  1611     02B4  3EFF               	addlw	-1
  1612     02B5  1D03               	skipz
  1613     02B6  2AB1               	goto	u695
  1614     02B7                     l1352:
  1615     02B7  3001               	movlw	1
  1616     02B8  00A8               	movwf	??___lwmod
  1617     02B9  0828               	movf	??___lwmod,w
  1618     02BA  07A9               	addwf	___lwmod@counter,f
  1619     02BB                     l1354:
  1620     02BB  1FA5               	btfss	___lwmod@divisor+1,7
  1621     02BC  2ABE               	goto	u701
  1622     02BD  2ABF               	goto	u700
  1623     02BE                     u701:
  1624     02BE  2AB0               	goto	l1350
  1625     02BF                     u700:
  1626     02BF                     l1356:
  1627     02BF  0825               	movf	___lwmod@divisor+1,w
  1628     02C0  0227               	subwf	___lwmod@dividend+1,w
  1629     02C1  1D03               	skipz
  1630     02C2  2AC5               	goto	u715
  1631     02C3  0824               	movf	___lwmod@divisor,w
  1632     02C4  0226               	subwf	___lwmod@dividend,w
  1633     02C5                     u715:
  1634     02C5  1C03               	skipc
  1635     02C6  2AC8               	goto	u711
  1636     02C7  2AC9               	goto	u710
  1637     02C8                     u711:
  1638     02C8  2ACF               	goto	l1360
  1639     02C9                     u710:
  1640     02C9                     l1358:
  1641     02C9  0824               	movf	___lwmod@divisor,w
  1642     02CA  02A6               	subwf	___lwmod@dividend,f
  1643     02CB  0825               	movf	___lwmod@divisor+1,w
  1644     02CC  1C03               	skipc
  1645     02CD  03A7               	decf	___lwmod@dividend+1,f
  1646     02CE  02A7               	subwf	___lwmod@dividend+1,f
  1647     02CF                     l1360:
  1648     02CF  3001               	movlw	1
  1649     02D0                     u725:
  1650     02D0  1003               	clrc
  1651     02D1  0CA5               	rrf	___lwmod@divisor+1,f
  1652     02D2  0CA4               	rrf	___lwmod@divisor,f
  1653     02D3  3EFF               	addlw	-1
  1654     02D4  1D03               	skipz
  1655     02D5  2AD0               	goto	u725
  1656     02D6                     l1362:
  1657     02D6  3001               	movlw	1
  1658     02D7  02A9               	subwf	___lwmod@counter,f
  1659     02D8  1D03               	btfss	3,2
  1660     02D9  2ADB               	goto	u731
  1661     02DA  2ADC               	goto	u730
  1662     02DB                     u731:
  1663     02DB  2ABF               	goto	l1356
  1664     02DC                     u730:
  1665     02DC                     l1364:
  1666     02DC  0827               	movf	___lwmod@dividend+1,w
  1667     02DD  00A5               	movwf	?___lwmod+1
  1668     02DE  0826               	movf	___lwmod@dividend,w
  1669     02DF  00A4               	movwf	?___lwmod
  1670     02E0                     l522:
  1671     02E0  0008               	return
  1672     02E1                     __end_of___lwmod:
  1673                           
  1674                           	psect	text6
  1675     021C                     __ptext6:	
  1676 ;; *************** function ___lwdiv *****************
  1677 ;; Defined at:
  1678 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  divisor         2    4[COMMON] unsigned int 
  1681 ;;  dividend        2    6[COMMON] unsigned int 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  quotient        2    2[BANK0 ] unsigned int 
  1684 ;;  counter         1    1[BANK0 ] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2    4[COMMON] unsigned int 
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         4       0       0       0       0
  1695 ;;      Locals:         0       3       0       0       0
  1696 ;;      Temps:          0       1       0       0       0
  1697 ;;      Totals:         4       4       0       0       0
  1698 ;;Total ram usage:        8 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_sprintf
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     021C                     ___lwdiv:	
  1709                           ;psect for function ___lwdiv
  1710                           
  1711     021C                     l1320:	
  1712                           ;incstack = 0
  1713                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1714                           
  1715     021C  1283               	bcf	3,5	;RP0=0, select bank0
  1716     021D  1303               	bcf	3,6	;RP1=0, select bank0
  1717     021E  01A2               	clrf	___lwdiv@quotient
  1718     021F  01A3               	clrf	___lwdiv@quotient+1
  1719     0220                     l1322:
  1720     0220  0874               	movf	___lwdiv@divisor,w
  1721     0221  0475               	iorwf	___lwdiv@divisor+1,w
  1722     0222  1903               	btfsc	3,2
  1723     0223  2A25               	goto	u611
  1724     0224  2A26               	goto	u610
  1725     0225                     u611:
  1726     0225  2A5D               	goto	l1342
  1727     0226                     u610:
  1728     0226                     l1324:
  1729     0226  01A1               	clrf	___lwdiv@counter
  1730     0227  0AA1               	incf	___lwdiv@counter,f
  1731     0228  2A34               	goto	l1330
  1732     0229                     l1326:
  1733     0229  3001               	movlw	1
  1734     022A                     u625:
  1735     022A  1003               	clrc
  1736     022B  0DF4               	rlf	___lwdiv@divisor,f
  1737     022C  0DF5               	rlf	___lwdiv@divisor+1,f
  1738     022D  3EFF               	addlw	-1
  1739     022E  1D03               	skipz
  1740     022F  2A2A               	goto	u625
  1741     0230                     l1328:
  1742     0230  3001               	movlw	1
  1743     0231  00A0               	movwf	??___lwdiv
  1744     0232  0820               	movf	??___lwdiv,w
  1745     0233  07A1               	addwf	___lwdiv@counter,f
  1746     0234                     l1330:
  1747     0234  1FF5               	btfss	___lwdiv@divisor+1,7
  1748     0235  2A37               	goto	u631
  1749     0236  2A38               	goto	u630
  1750     0237                     u631:
  1751     0237  2A29               	goto	l1326
  1752     0238                     u630:
  1753     0238                     l1332:
  1754     0238  3001               	movlw	1
  1755     0239                     u645:
  1756     0239  1003               	clrc
  1757     023A  0DA2               	rlf	___lwdiv@quotient,f
  1758     023B  0DA3               	rlf	___lwdiv@quotient+1,f
  1759     023C  3EFF               	addlw	-1
  1760     023D  1D03               	skipz
  1761     023E  2A39               	goto	u645
  1762     023F  0875               	movf	___lwdiv@divisor+1,w
  1763     0240  0277               	subwf	___lwdiv@dividend+1,w
  1764     0241  1D03               	skipz
  1765     0242  2A45               	goto	u655
  1766     0243  0874               	movf	___lwdiv@divisor,w
  1767     0244  0276               	subwf	___lwdiv@dividend,w
  1768     0245                     u655:
  1769     0245  1C03               	skipc
  1770     0246  2A48               	goto	u651
  1771     0247  2A49               	goto	u650
  1772     0248                     u651:
  1773     0248  2A50               	goto	l1338
  1774     0249                     u650:
  1775     0249                     l1334:
  1776     0249  0874               	movf	___lwdiv@divisor,w
  1777     024A  02F6               	subwf	___lwdiv@dividend,f
  1778     024B  0875               	movf	___lwdiv@divisor+1,w
  1779     024C  1C03               	skipc
  1780     024D  03F7               	decf	___lwdiv@dividend+1,f
  1781     024E  02F7               	subwf	___lwdiv@dividend+1,f
  1782     024F                     l1336:
  1783     024F  1422               	bsf	___lwdiv@quotient,0
  1784     0250                     l1338:
  1785     0250  3001               	movlw	1
  1786     0251                     u665:
  1787     0251  1003               	clrc
  1788     0252  0CF5               	rrf	___lwdiv@divisor+1,f
  1789     0253  0CF4               	rrf	___lwdiv@divisor,f
  1790     0254  3EFF               	addlw	-1
  1791     0255  1D03               	skipz
  1792     0256  2A51               	goto	u665
  1793     0257                     l1340:
  1794     0257  3001               	movlw	1
  1795     0258  02A1               	subwf	___lwdiv@counter,f
  1796     0259  1D03               	btfss	3,2
  1797     025A  2A5C               	goto	u671
  1798     025B  2A5D               	goto	u670
  1799     025C                     u671:
  1800     025C  2A38               	goto	l1332
  1801     025D                     u670:
  1802     025D                     l1342:
  1803     025D  0823               	movf	___lwdiv@quotient+1,w
  1804     025E  00F5               	movwf	?___lwdiv+1
  1805     025F  0822               	movf	___lwdiv@quotient,w
  1806     0260  00F4               	movwf	?___lwdiv
  1807     0261                     l512:
  1808     0261  0008               	return
  1809     0262                     __end_of___lwdiv:
  1810                           
  1811                           	psect	text7
  1812     031C                     __ptext7:	
  1813 ;; *************** function _cadena *****************
  1814 ;; Defined at:
  1815 ;;		line 129 in file "Postlab_08.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  txt             1    wreg     PTR unsigned char 
  1818 ;;		 -> STR_5(30), STR_4(28), STR_3(25), STR_2(45), 
  1819 ;;		 -> STR_1(3), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  txt             1    6[BANK0 ] PTR unsigned char 
  1822 ;;		 -> STR_5(30), STR_4(28), STR_3(25), STR_2(45), 
  1823 ;;		 -> STR_1(3), 
  1824 ;;  i               2    4[BANK0 ] int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       3       0       0       0
  1836 ;;      Temps:          0       2       0       0       0
  1837 ;;      Totals:         0       5       0       0       0
  1838 ;;Total ram usage:        5 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 3
  1841 ;; This function calls:
  1842 ;;		_strlen
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     031C                     _cadena:	
  1849                           ;psect for function _cadena
  1850                           
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1854                           ;cadena@txt stored from wreg
  1855     031C  1283               	bcf	3,5	;RP0=0, select bank0
  1856     031D  1303               	bcf	3,6	;RP1=0, select bank0
  1857     031E  00A6               	movwf	cadena@txt
  1858     031F                     l1430:
  1859                           
  1860                           ;Postlab_08.c: 129: void cadena(char txt[]);Postlab_08.c: 130: {;Postlab_08.c: 131:     
      +                          int i;;Postlab_08.c: 132:     for(i = 0; i < strlen(txt); i++) {
  1861     031F  01A4               	clrf	cadena@i
  1862     0320  01A5               	clrf	cadena@i+1
  1863     0321  2B3D               	goto	l1438
  1864     0322                     l1432:
  1865                           
  1866                           ;Postlab_08.c: 133:         TXREG = txt[i];
  1867     0322  0824               	movf	cadena@i,w
  1868     0323  0726               	addwf	cadena@txt,w
  1869     0324  0084               	movwf	4
  1870     0325  120A  118A  2100  120A  118A  	fcall	stringdir
  1871     032A  0099               	movwf	25	;volatile
  1872     032B                     l1434:
  1873                           
  1874                           ;Postlab_08.c: 134:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1875     032B  300D               	movlw	13
  1876     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1877     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1878     032E  00A3               	movwf	??_cadena+1
  1879     032F  30FB               	movlw	251
  1880     0330  00A2               	movwf	??_cadena
  1881     0331                     u927:
  1882     0331  0BA2               	decfsz	??_cadena,f
  1883     0332  2B31               	goto	u927
  1884     0333  0BA3               	decfsz	??_cadena+1,f
  1885     0334  2B31               	goto	u927
  1886     0335                     l1436:
  1887                           
  1888                           ;Postlab_08.c: 135:     }
  1889     0335  3001               	movlw	1
  1890     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1891     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1892     0338  07A4               	addwf	cadena@i,f
  1893     0339  1803               	skipnc
  1894     033A  0AA5               	incf	cadena@i+1,f
  1895     033B  3000               	movlw	0
  1896     033C  07A5               	addwf	cadena@i+1,f
  1897     033D                     l1438:
  1898     033D  0826               	movf	cadena@txt,w
  1899     033E  120A  118A  236E  120A  118A  	fcall	_strlen
  1900     0343  0875               	movf	?_strlen+1,w
  1901     0344  1283               	bcf	3,5	;RP0=0, select bank0
  1902     0345  1303               	bcf	3,6	;RP1=0, select bank0
  1903     0346  0225               	subwf	cadena@i+1,w
  1904     0347  1D03               	skipz
  1905     0348  2B4B               	goto	u805
  1906     0349  0874               	movf	?_strlen,w
  1907     034A  0224               	subwf	cadena@i,w
  1908     034B                     u805:
  1909     034B  1C03               	skipc
  1910     034C  2B4E               	goto	u801
  1911     034D  2B4F               	goto	u800
  1912     034E                     u801:
  1913     034E  2B22               	goto	l1432
  1914     034F                     u800:
  1915     034F                     l123:
  1916     034F  0008               	return
  1917     0350                     __end_of_cadena:
  1918                           
  1919                           	psect	text8
  1920     036E                     __ptext8:	
  1921 ;; *************** function _strlen *****************
  1922 ;; Defined at:
  1923 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  s               1    wreg     PTR const unsigned char 
  1926 ;;		 -> STR_5(30), STR_4(28), STR_3(25), STR_2(45), 
  1927 ;;		 -> STR_1(3), 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1930 ;;		 -> STR_5(30), STR_4(28), STR_3(25), STR_2(45), 
  1931 ;;		 -> STR_1(3), 
  1932 ;;  cp              1    1[BANK0 ] PTR const unsigned char 
  1933 ;;		 -> STR_5(30), STR_4(28), STR_3(25), STR_2(45), 
  1934 ;;		 -> STR_1(3), 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  2    4[COMMON] unsigned int 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1944 ;;      Params:         2       0       0       0       0
  1945 ;;      Locals:         0       2       0       0       0
  1946 ;;      Temps:          1       0       0       0       0
  1947 ;;      Totals:         3       2       0       0       0
  1948 ;;Total ram usage:        5 bytes
  1949 ;; Hardware stack levels used: 2
  1950 ;; Hardware stack levels required when called: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_cadena
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958     036E                     _strlen:	
  1959                           ;psect for function _strlen
  1960                           
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  1964                           ;strlen@s stored from wreg
  1965     036E  1283               	bcf	3,5	;RP0=0, select bank0
  1966     036F  1303               	bcf	3,6	;RP1=0, select bank0
  1967     0370  00A0               	movwf	strlen@s
  1968     0371                     l1420:
  1969     0371  0820               	movf	strlen@s,w
  1970     0372  00A1               	movwf	strlen@cp
  1971     0373  2B78               	goto	l1424
  1972     0374                     l1422:
  1973     0374  3001               	movlw	1
  1974     0375  00F6               	movwf	??_strlen
  1975     0376  0876               	movf	??_strlen,w
  1976     0377  07A1               	addwf	strlen@cp,f
  1977     0378                     l1424:
  1978     0378  0821               	movf	strlen@cp,w
  1979     0379  0084               	movwf	4
  1980     037A  120A  118A  2100  120A  118A  	fcall	stringdir
  1981     037F  3A00               	xorlw	0
  1982     0380  1D03               	skipz
  1983     0381  2B83               	goto	u791
  1984     0382  2B84               	goto	u790
  1985     0383                     u791:
  1986     0383  2B74               	goto	l1422
  1987     0384                     u790:
  1988     0384                     l1426:
  1989     0384  0820               	movf	strlen@s,w
  1990     0385  0221               	subwf	strlen@cp,w
  1991     0386  00F4               	movwf	?_strlen
  1992     0387  01F5               	clrf	?_strlen+1
  1993     0388  1BF4               	btfsc	?_strlen,7
  1994     0389  03F5               	decf	?_strlen+1,f
  1995     038A                     l694:
  1996     038A  0008               	return
  1997     038B                     __end_of_strlen:
  1998                           
  1999                           	psect	text9
  2000     0350                     __ptext9:	
  2001 ;; *************** function _isr *****************
  2002 ;; Defined at:
  2003 ;;		line 58 in file "Postlab_08.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2017 ;;      Params:         0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0
  2019 ;;      Temps:          4       0       0       0       0
  2020 ;;      Totals:         4       0       0       0       0
  2021 ;;Total ram usage:        4 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; This function calls:
  2024 ;;		Nothing
  2025 ;; This function is called by:
  2026 ;;		Interrupt level 1
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030     0350                     _isr:	
  2031                           ;psect for function _isr
  2032                           
  2033     0350                     i1l1238:
  2034                           
  2035                           ;Postlab_08.c: 60:     if(T0IF)
  2036     0350  1D0B               	btfss	11,2	;volatile
  2037     0351  2B53               	goto	u52_21
  2038     0352  2B54               	goto	u52_20
  2039     0353                     u52_21:
  2040     0353  2B59               	goto	i1l1244
  2041     0354                     u52_20:
  2042     0354                     i1l1240:
  2043                           
  2044                           ;Postlab_08.c: 61:     {;Postlab_08.c: 62:         TMR0 = 61;
  2045     0354  303D               	movlw	61
  2046     0355  1283               	bcf	3,5	;RP0=0, select bank0
  2047     0356  1303               	bcf	3,6	;RP1=0, select bank0
  2048     0357  0081               	movwf	1	;volatile
  2049     0358                     i1l1242:
  2050                           
  2051                           ;Postlab_08.c: 63:         INTCONbits.T0IF = 0;
  2052     0358  110B               	bcf	11,2	;volatile
  2053     0359                     i1l1244:
  2054                           
  2055                           ;Postlab_08.c: 65:     if (ADIF)
  2056     0359  1283               	bcf	3,5	;RP0=0, select bank0
  2057     035A  1303               	bcf	3,6	;RP1=0, select bank0
  2058     035B  1F0C               	btfss	12,6	;volatile
  2059     035C  2B5E               	goto	u53_21
  2060     035D  2B5F               	goto	u53_20
  2061     035E                     u53_21:
  2062     035E  2B67               	goto	i1l89
  2063     035F                     u53_20:
  2064     035F                     i1l1246:
  2065                           
  2066                           ;Postlab_08.c: 66:     {;Postlab_08.c: 67:         numero = ADRESH;
  2067     035F  081E               	movf	30,w	;volatile
  2068     0360  00F0               	movwf	??_isr
  2069     0361  01F1               	clrf	??_isr+1
  2070     0362  0870               	movf	??_isr,w
  2071     0363  00C6               	movwf	_numero
  2072     0364  0871               	movf	??_isr+1,w
  2073     0365  00C7               	movwf	_numero+1
  2074     0366                     i1l1248:
  2075                           
  2076                           ;Postlab_08.c: 68:         PIR1bits.ADIF = 0;
  2077     0366  130C               	bcf	12,6	;volatile
  2078     0367                     i1l89:
  2079     0367  0873               	movf	??_isr+3,w
  2080     0368  008A               	movwf	10
  2081     0369  0E72               	swapf	??_isr+2,w
  2082     036A  0083               	movwf	3
  2083     036B  0EFE               	swapf	btemp,f
  2084     036C  0E7E               	swapf	btemp,w
  2085     036D  0009               	retfie
  2086     036E                     __end_of_isr:
  2087     007E                     btemp	set	126	;btemp
  2088     007E                     wtemp0	set	126
  2089                           
  2090                           	psect	intentry
  2091     0004                     __pintentry:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _isr: [wreg]
  2094                           
  2095     0004                     interrupt_function:
  2096     007E                     saved_w	set	btemp
  2097     0004  00FE               	movwf	btemp
  2098     0005  0E03               	swapf	3,w
  2099     0006  00F2               	movwf	??_isr+2
  2100     0007  080A               	movf	10,w
  2101     0008  00F3               	movwf	??_isr+3
  2102     0009  120A  118A  2B50   	ljmp	_isr
  2103                           
  2104                           	psect	idloc
  2105                           
  2106                           ;Config register IDLOC0 @ 0x2000
  2107                           ;	unspecified, using default values
  2108     2000                     	org	8192
  2109     2000  3FFF               	dw	16383
  2110                           
  2111                           ;Config register IDLOC1 @ 0x2001
  2112                           ;	unspecified, using default values
  2113     2001                     	org	8193
  2114     2001  3FFF               	dw	16383
  2115                           
  2116                           ;Config register IDLOC2 @ 0x2002
  2117                           ;	unspecified, using default values
  2118     2002                     	org	8194
  2119     2002  3FFF               	dw	16383
  2120                           
  2121                           ;Config register IDLOC3 @ 0x2003
  2122                           ;	unspecified, using default values
  2123     2003                     	org	8195
  2124     2003  3FFF               	dw	16383
  2125                           
  2126                           	psect	config
  2127                           
  2128                           ;Config register CONFIG1 @ 0x2007
  2129                           ;	Oscillator Selection bits
  2130                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2131                           ;	Watchdog Timer Enable bit
  2132                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2133                           ;	Power-up Timer Enable bit
  2134                           ;	PWRTE = OFF, PWRT disabled
  2135                           ;	RE3/MCLR pin function select bit
  2136                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2137                           ;	Code Protection bit
  2138                           ;	CP = OFF, Program memory code protection is disabled
  2139                           ;	Data Code Protection bit
  2140                           ;	CPD = OFF, Data memory code protection is disabled
  2141                           ;	Brown Out Reset Selection bits
  2142                           ;	BOREN = OFF, BOR disabled
  2143                           ;	Internal External Switchover bit
  2144                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2145                           ;	Fail-Safe Clock Monitor Enabled bit
  2146                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2147                           ;	Low Voltage Programming Enable bit
  2148                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2149                           ;	In-Circuit Debugger Mode bit
  2150                           ;	DEBUG = 0x1, unprogramme  2151     2007                     	org	8199
  2152     2007  20D4               	dw	8404
  2153                           
  2154                           ;Config register CONFIG2 @ 0x2008
  2155                           ;	Brown-out Reset Selection bit
  2156                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2157                           ;	Flash Program Memory Self Write Enable bits
  2158                           ;	WRT = OFF, Write protection off
  2159     2008                     	org	8200
  2160     2008  3FFF               	dw	16383

Data Sizes:
    Strings     131
    Constant    10
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     38      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 45
		 -> STR_5(CODE[30]), STR_4(CODE[28]), STR_3(CODE[25]), STR_2(CODE[45]), 
		 -> STR_1(CODE[3]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 45
		 -> STR_5(CODE[30]), STR_4(CODE[28]), STR_3(CODE[25]), STR_2(CODE[45]), 
		 -> STR_1(CODE[3]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> enviar_numero_decimal@buffer(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    cadena@txt	PTR unsigned char  size(1) Largest target is 45
		 -> STR_5(CODE[30]), STR_4(CODE[28]), STR_3(CODE[25]), STR_2(CODE[45]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _cadena->_strlen

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_enviar_numero_decimal
    _enviar_numero_decimal->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _cadena->_strlen

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2304
                                             35 BANK0      3     3      0
                             _cadena
              _enviar_numero_decimal
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviar_numero_decimal                               12    10      2    1828
                                             23 BANK0     12    10      2
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1525
                                             10 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               5     5      0     476
                                              2 BANK0      5     5      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               5     3      2     166
                                              4 COMMON     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
     _strlen
   _enviar_numero_decimal
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _initUART
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      34       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      34      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Apr 19 22:47:42 2023

                            pc 0002                             fsr 0004                            l102 01D9  
                          l104 01DD                            l123 034F                            l107 01FD  
                          l117 031B                            l126 03A2                            l129 02A4  
                          l236 00DD                            l512 0261                            l522 02E0  
                          l694 038A                            u610 0226                            u611 0225  
                          u700 02BF                            u701 02BE                            u630 0238  
                          u710 02C9                            u631 0237                            u711 02C8  
                          u800 034F                            u801 034E                            u625 022A  
                          u650 0249                            u730 02DC                            u810 031B  
                          u651 0248                            u731 02DB                            u715 02C5  
                          u811 031A                            u740 0027                            u820 01C2  
                          u805 034B                            u645 0239                            u725 02D0  
                          u741 0026                            u821 01C1                            u670 025D  
                          u750 007B                            u830 01CB                            u671 025C  
                          u655 0245                            u751 007A                            u815 0317  
                          u831 01CA                            u680 02AD                            u760 0086  
                          u840 01D2                            u665 0251                            u681 02AC  
                          u761 0085                            u841 01D1                            u770 00C9  
                          u850 01D8                            u771 00C8                            u755 0077  
                          u907 0296                            u851 01D7                            u780 00D9  
                          u860 01DD                            u781 00D8                            u917 0301  
                          u861 01DC                            u790 0384                            u870 01F5  
                          u791 0383                            u927 0331                            u695 02B1  
                          u871 01F4                            u880 0203                            u881 0202  
                          u897 0211                            _isr 0350                            fsr0 0004  
                          indf 0000                           l1200 0394                           l1210 03A1  
                         l1202 0397                           l1204 039A                           l1206 039D  
                         l1150 0272                           l1320 021C                           l1400 0086  
                         l1208 03A0                           l1160 027B                           l1152 0273  
                         l1330 0234                           l1322 0220                           l1402 0089  
                         l1410 00C9                           l1170 0282                           l1162 027C  
                         l1154 0274                           l1146 0262                           l1420 0371  
                         l1340 0257                           l1332 0238                           l1324 0226  
                         l1404 00B7                           l1412 00D9                           l1180 029B  
                         l1172 0286                           l1164 027D                           l1156 0275  
                         l1148 026E                           l1500 0208                           l1422 0374  
                         l1430 031F                           l1334 0249                           l1326 0229  
                         l1342 025D                           l1350 02B0                           l1406 00BC  
                         l1182 029E                           l1174 028A                           l1166 027E  
                         l1158 0277                           l1502 0209                           l1424 0378  
                         l1432 0322                           l1336 024F                           l1328 0230  
                         l1360 02CF                           l1352 02B7                           l1408 00C0  
                         l1440 02E1                           l1192 038B                           l1184 029F  
                         l1176 0290                           l1168 0281                           l1426 0384  
                         l1434 032B                           l1338 0250                           l1362 02D6  
                         l1354 02BB                           l1346 02A5                           l1370 0021  
                         l1450 02FB                           l1442 02EF                           l1194 038F  
                         l1186 02A0                           l1178 0292                           l1436 0335  
                         l1356 02BF                           l1348 02AD                           l1364 02DC  
                         l1524 004A                           l1372 0027                           l1452 0306  
                         l1196 0390                           l1188 02A3                           l1460 01A3  
                         l1438 033D                           l1358 02C9                           l1382 0038  
                         l1374 002C                           l1454 030E                           l1198 0391  
                         l1470 01C2                           l1462 01A9                           l1384 0052  
                         l1376 0031                           l1368 001E                           l1448 02F3  
                         l1480 01D8                           l1472 01C5                           l1464 01AF  
                         l1456 0193                           l1394 0060                           l1386 005A  
                         l1378 0033                           l1490 01F5                           l1482 01DF  
                         l1466 01B5                           l1458 019D                           l1388 005E  
                         l1492 01F6                           l1484 01EA                           l1468 01BC  
                         l1476 01CC                           l1398 007C                           l1494 01F7  
                         l1486 01ED                           l1478 01D2                           l1496 0203  
                         l1488 01EF                           l1498 0207                           _ADIF 0066  
                         ?_isr 0070                           STR_1 013A                           STR_2 0110  
                         STR_3 0177                           STR_4 015B                           STR_5 013D  
                         STR_6 0190                           _BRGH 04C2                           _T0IF 005A  
                         _CREN 00C4                           _RCIF 0065                           i1l89 0367  
                         _TMR0 0001                           _SPEN 00C7                           _TXEN 04C5  
                         _TXIF 0064                           _SYNC 04C4                           _main 0193  
                         btemp 007E                           start 000C                          ??_isr 0070  
                        ?_main 0070                          _BRG16 0C3B                          _ANSEL 0188  
              __end_of___lwdiv 0262                __end_of___lwmod 02E1                          _RCREG 001A  
                        _SPBRG 0099                          _PORTA 0005                          _PORTB 0006  
                        _PORTD 0008                          u52_20 0354                          u52_21 0353  
                        u53_20 035F                          u53_21 035E                          _TRISA 0085  
                        _TRISB 0086                          _TRISD 0088                          _TXREG 0019  
              __end_of_dpowers 0110                          _setup 0262                          pclath 000A  
                        status 0003                          wtemp0 007E                __end_of_sprintf 00DE  
       ?_enviar_numero_decimal 0037                __initialization 000F                   __end_of_main 021C  
                       ??_main 0043                         _ADRESH 001E                         ?_setup 0070  
                       _ANSELH 0189                         i1l1240 0354                         i1l1242 0358  
                       i1l1244 0359                         i1l1246 035F                         i1l1238 0350  
                       i1l1248 0366                         _SPBRGH 009A                         _cadena 031C  
             __end_of_initUART 03A3                      ??___lwdiv 0020                      ??___lwmod 0028  
                       _valPOT 0078                         _numero 0046                         _status 0048  
                       _strlen 036E                         saved_w 007E                      ??_sprintf 002D  
      __end_of__initialization 0017                 __pcstackCOMMON 0070         enviar_numero_decimal@i 0041  
                __end_of_setup 02A5                 _OPTION_REGbits 0081                        ??_setup 0074  
                   __pbssBANK0 0046                     __pmaintext 0193                        ?_cadena 0070  
                   __pintentry 0004                        ?_strlen 0074    enviar_numero_decimal@buffer 003B  
  enviar_numero_decimal@numero 0037                     __stringtab 0100                      ?_initUART 0070  
      ??_enviar_numero_decimal 0039                        ___lwdiv 021C                        ___lwmod 02A5  
                      cadena@i 0024                        __ptext1 0262                        __ptext2 038B  
                      __ptext3 02E1                        __ptext4 001B                        __ptext5 02A5  
                      __ptext6 021C                        __ptext7 031C                        __ptext8 036E  
                      __ptext9 0350                        _dpowers 0106                        _sprintf 001B  
         end_of_initialization 0017                     ??_initUART 0074                        strlen@s 0020  
               __end_of_cadena 0350                 __end_of_strlen 038B            start_initialization 000F  
                  __end_of_isr 036E                       ??_cadena 0022                       ??_strlen 0076  
                  __pbssCOMMON 0078                      ___latbits 0002                  __pcstackBANK0 0020  
                  sprintf@flag 0030                    sprintf@prec 0034  __end_of_enviar_numero_decimal 031C  
             ___lwdiv@dividend 0076                      cadena@txt 0026                       ?___lwdiv 0074  
                     ?___lwmod 0024                      __pstrings 0100               ___lwdiv@quotient 0022  
                     ?_sprintf 002A              interrupt_function 0004                       _PIE1bits 008C  
                     _PIR1bits 000C                     _ADCON0bits 001F                    __stringbase 0105  
                   _ADCON1bits 009F             __end_of__stringtab 0106                     sprintf@val 0032  
              ___lwdiv@divisor 0074                ___lwdiv@counter 0021                       _initUART 038B  
                   _INTCONbits 000B                       intlevel1 0000                      sprintf@ap 0031  
                    sprintf@sp 0035               ___lwmod@dividend 0026                      stringcode 0100  
                   _OSCCONbits 008F                       sprintf@c 0036                       sprintf@f 002A  
              ___lwmod@divisor 0024                       strlen@cp 0021                ___lwmod@counter 0029  
                     stringdir 0100                       stringtab 0100          _enviar_numero_decimal 02E1  
